Index: app/src/main/java/com/yoyoG/makeiteven2/fragments/FragmentStartScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yoyoG.makeiteven2.fragments\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.transition.TransitionInflater\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.ImageButton\r\nimport android.widget.ImageView\r\nimport androidx.fragment.app.Fragment\r\nimport com.yoyoG.makeiteven2.R\r\nimport com.yoyoG.makeiteven2.dialogs.DialogStore\r\nimport com.yoyoG.makeiteven2.extras.Constants\r\nimport com.yoyoG.makeiteven2.intefaces.IFinishTimerListener\r\nimport com.yoyoG.makeiteven2.intefaces.IFragmentsStartsScreenListener\r\nimport com.yoyoG.makeiteven2.intefaces.IStoreDialogBtnClickedListener\r\nimport com.yoyoG.makeiteven2.managers.AnimationsManager\r\nimport com.yoyoG.makeiteven2.managers.AudioManager\r\nimport com.yoyoG.makeiteven2.managers.TimerManager\r\nimport kotlinx.android.synthetic.main.fragment_start_screen.view.*\r\n\r\nclass FragmentStartScreen : Fragment(), IFinishTimerListener, IStoreDialogBtnClickedListener {\r\n\r\n    private lateinit var mStageModeShine: Button\r\n    private lateinit var mArcadeModeShine: Button\r\n    private lateinit var mTutorialShine: Button\r\n    private lateinit var mListener: IFragmentsStartsScreenListener\r\n    private lateinit var mStageModeBtn: Button\r\n    private lateinit var mArcadeModeBtn: Button\r\n    private lateinit var mTutorialBtn: Button\r\n    private lateinit var mScoreBoardBtn: ImageButton\r\n    private lateinit var mLogoIv: ImageView\r\n    private lateinit var mStoreBtn: ImageView\r\n    private lateinit var mbtnRateUs: ImageButton\r\n    private lateinit var mDialogStore: DialogStore\r\n\r\n    private var timerManager: TimerManager? = null\r\n\r\n\r\n    override fun onActivityCreated(savedInstanceState: Bundle?) {\r\n        super.onActivityCreated(savedInstanceState)\r\n        mListener.show3DotsToolBar()\r\n    }\r\n\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        val rootView = inflater.inflate(R.layout.fragment_start_screen, container, false)\r\n        initTransition()\r\n        initViews(rootView)\r\n        initAnimations()\r\n        initBtnOnClick()\r\n        initStoreDialog()\r\n        return rootView\r\n    }\r\n\r\n    private fun initStoreDialog() {\r\n        mDialogStore = DialogStore(this, context!! , this.activity!!)\r\n    }\r\n\r\n    private fun initViews(rootView: View) {\r\n        mStageModeBtn = rootView.btnStageMode\r\n        mArcadeModeBtn = rootView.btnArcadeMode\r\n        mTutorialBtn = rootView.btnTutorial\r\n        mScoreBoardBtn = rootView.btnScoreBoard\r\n        mLogoIv = rootView.ivGameLogo\r\n        mStoreBtn = rootView.IBtnStoreStageMode\r\n        mStageModeShine = rootView.btnStageModeShine\r\n        mArcadeModeShine = rootView.btnArcadeModeShine\r\n        mTutorialShine = rootView.btnTutorialShine\r\n        mbtnRateUs = rootView.btnRateUs\r\n    }\r\n\r\n    private fun initTransition() {\r\n        val inflater = TransitionInflater.from(requireContext())\r\n        exitTransition = inflater.inflateTransition(R.transition.fade)\r\n    }\r\n\r\n    private fun initBtnOnClick() {\r\n        mStageModeBtn.setOnClickListener { mListener.onStartScreenFragmentButtonClicked(it) }\r\n        mScoreBoardBtn.setOnClickListener { mListener.onStartScreenFragmentButtonClicked(it) }\r\n        mTutorialBtn.setOnClickListener { mListener.onStartScreenFragmentButtonClicked(it) }\r\n        mArcadeModeBtn.setOnClickListener { mListener.onStartScreenFragmentButtonClicked(it) }\r\n        mbtnRateUs.setOnClickListener { mListener.onStartScreenFragmentButtonClicked(it) }\r\n        mStoreBtn.setOnClickListener { mDialogStore.showStoreDialog() }\r\n        }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        mDialogStore.let {it.hideStoreDialog() }\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private fun initAnimations() {\r\n        mArcadeModeBtn.apply {\r\n            startAnimation(AnimationsManager.getInstance(context!!).getScaleInAnimation())\r\n            setOnTouchListener(AnimationsManager.getInstance(context!!).getTouchAnimation())\r\n        }\r\n        mStageModeBtn.apply {\r\n            startAnimation(AnimationsManager.getInstance(context!!).getScaleInAnimation())\r\n            setOnTouchListener(AnimationsManager.getInstance(context!!).getTouchAnimation())\r\n        }\r\n        mTutorialBtn.apply {\r\n            startAnimation(AnimationsManager.getInstance(context!!).getScaleInAnimation())\r\n            setOnTouchListener(AnimationsManager.getInstance(context!!).getTouchAnimation())\r\n        }\r\n        mScoreBoardBtn.apply {\r\n            startAnimation(AnimationsManager.getInstance(context!!).getScaleInAnimation())\r\n\r\n        }\r\n\r\n        mStoreBtn.apply {\r\n            setOnTouchListener(AnimationsManager.getInstance(context!!).getTouchAnimation())\r\n            startAnimation(AnimationsManager.getInstance(context!!).getScaleInAnimation())\r\n        }\r\n\r\n        mLogoIv.startAnimation(AnimationsManager.getInstance(context!!).getBounceAnimation())\r\n\r\n        AnimationsManager.getInstance(context!!).setFadeInOutAnimation(mStageModeShine)\r\n        AnimationsManager.getInstance(context!!).setFadeInOutAnimation(mArcadeModeShine)\r\n        AnimationsManager.getInstance(context!!).setFadeInOutAnimation(mTutorialShine)\r\n    }\r\n\r\n    override fun onAttach(context: Context) {\r\n        if (context is IFragmentsStartsScreenListener) {\r\n            mListener = context\r\n        } else {\r\n            throw ClassCastException(context.toString() + \"must implement IFragmentsStartsScreenCallback\")\r\n        }\r\n        super.onAttach(context)\r\n    }\r\n\r\n    override fun onFinishTimer() {\r\n    }\r\n\r\n    override fun onStoreDialogBtnClicked(view: View) {\r\n\r\n    }\r\n\r\n    override fun storeDialogDismissed() {\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        context?.let {\r\n            AudioManager.getInstance(it).playLoopMusicForSpecificFragment(Constants.START_SCREEN_FRAGMENT_TAG)\r\n        }\r\n        Log.e(\"lifecycle\", \"start screen onresume\")\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/yoyoG/makeiteven2/fragments/FragmentStartScreen.kt	(revision cb05c29df1b168cb811ecf44d1c2fb8bf3e6d723)
+++ app/src/main/java/com/yoyoG/makeiteven2/fragments/FragmentStartScreen.kt	(date 1604947197292)
@@ -59,6 +59,7 @@
 
     private fun initStoreDialog() {
         mDialogStore = DialogStore(this, context!! , this.activity!!)
+
     }
 
     private fun initViews(rootView: View) {
